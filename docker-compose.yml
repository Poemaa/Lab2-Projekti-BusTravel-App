version: ‘3.4’
services:
  busfeedback:
    image: ${DOCKER_REGISTRY-}busfeedback
    container_name: busfeedback
    ports:
      - 5214:80
    build:
      context: .
      dockerfile: BusFeedback/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
    networks:
      - sql
      - pulsar
    depends_on:
      - pulsar
      - sql

  busrecommendations:
    image: ${DOCKER_REGISTRY-}busrecommendations
    container_name: busrecommendations
    ports:
      - 5215:80
    build:
      context: .
      dockerfile: BusRecommendations/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
    networks:
      - postgres
      - pulsar
    depends_on:
      - pulsar
      - postgres

  users:
    image: ${DOCKER_REGISTRY-}users
    container_name: users
    ports:
      - 5216:80
    build:
      context: .
      dockerfile: User/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
    networks:
      - pulsar
      - elastic
      - postgres
    depends_on:
      - pulsar
      - postgres
      - elasticsearch

  ocelotgateway:
    image: ${DOCKER_REGISTRY-}ocelotgateway
    container_name: ocelotgateway
    build:
      context: .
      dockerfile: OcelotGateway/Dockerfile
    ports:
      - 44372:80
      - 44373:443
    environment:
      ASPNETCORE_URLS: "https://+:443;http://+:80"
      ASPNETCORE_HTTPS_PORT: "44373"
      ASPNETCORE_ENVIRONMENT: "Development"
    networks:
      - pulsar
    links:
      - pulsar
      - newsarticles
      - userinteractions
      - users
    depends_on:
      - pulsar
      - newsarticles
      - userinteractions
      - users
    volumes:
      - ${APPDATA}\microsoft\UserSecrets\:/root/.microsoft/usersecrets
      - ${USERPROFILE}\.aspnet\https:/root/.aspnet/https/

  elasticsearch:
    image: elasticsearch:8.5.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - target: 9200
        published: 9200
    networks:
      - elastic

  kibana:
    image: kibana:8.2.2
    container_name: kibana
    ports:
      - target: 5601
        published: 5601
    depends_on:
      - elasticsearch
    networks:
      - elastic

  pulsar:
    hostname: pulsar
    image: apachepulsar/pulsar:latest
    container_name: pulsar
    restart: always
    ports:
      - 6650:6650
    command: /bin/bash -c "bin/pulsar standalone"
    networks:
      - pulsar
    volumes:
      - pulsardata:/pulsar/data
      - pulsarconf:/pulsar/conf

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning
    networks:
      - redis
    volumes:
      - redis:/data

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: newsaggregator
      POSTGRES_PASSWORD: phase3
    volumes:
      - postgres:/data/postgres
    ports:
      - 5432:5432
    networks:
      - postgres

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: life@gjirafa.com
      PGADMIN_DEFAULT_PASSWORD: phase3
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - 8080:80
    networks:
      - postgres

networks:
  postgres:
    driver: bridge
  redis:
    driver: bridge
  elastic:
    driver: bridge
  pulsar:
    driver: bridge
volumes:
  es_data:
    driver: local
  pulsardata:
    driver: local
  pulsarconf:
    driver: local
  redis:
    driver: local
  postgres:
    driver: local
  pgadmin:
    driver: local